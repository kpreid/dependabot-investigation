[workspace]
members = [
  "problem",
]

# Use feature resolver version 2 (latest). (This must be specified explicitly
# in a workspace, but would be implicit in a single package with edition="2021".)
resolver = "2"

[workspace.package]
# When changing any of these values, be sure to also update the non-workspace packages
# as listed above, if applicable.
edition = "2021"
rust-version = "1.80"

[workspace.dependencies]
all-is-cubes-base = { path = "all-is-cubes-base", default-features = false }
itertools = { version = "0.12.0", default-features = false, features = ["use_alloc"] }

# Note: Lints are also necessarily redefined in the workspaces other than this one.
[workspace.lints]
# rustc lints that are set to deny
rust.rust_2018_idioms = { level = "deny", priority = -1 }
rust.unsafe_op_in_unsafe_fn = "deny"

# rustc lints that are set to warn
rust.explicit_outlives_requirements = "warn"
rust.missing_debug_implementations = "warn"
rust.missing_docs = "warn"
rust.noop_method_call = "warn"
rust.redundant_lifetimes = "warn"
rust.trivial_casts = "warn"
rust.trivial_numeric_casts = "warn"
rust.unnameable_types = "warn"
rust.unused_extern_crates = "warn"
rust.unused_lifetimes = "warn"
rust.unused_qualifications = "warn"
# This lint has false positives on dev-dependencies. Occasionally turn it on to audit non-dev deps.
# rust.unused_crate_dependencies = "warn"

# clippy default lints that are set to allow
clippy.collapsible_else_if = "allow"
clippy.collapsible_if = "allow"
clippy.match_ref_pats = "allow"
clippy.needless_update = "allow"
clippy.single_match = "allow"

# clippy::pedantic lints that are set to allow
clippy.cast_possible_truncation = "allow" # we would need an alternative for intentional from-float saturation and to-float precision loss
clippy.cast_precision_loss = "allow" # consider enabling
clippy.cast_sign_loss = "allow" # consider enabling
clippy.default_trait_access = "allow"
clippy.empty_enum = "allow"
clippy.enum_glob_use = "allow"
clippy.explicit_iter_loop = "allow" # I prefer the opposite style
clippy.float_cmp = "allow"
clippy.from_iter_instead_of_collect = "allow" # <https://github.com/rust-lang/rust-clippy/issues/7213>
clippy.if_not_else = "allow"
clippy.inline_always = "allow"
clippy.items_after_statements = "allow" # we use this sparingly
clippy.manual_assert = "allow"
clippy.many_single_char_names = "allow"
clippy.match_bool = "allow"
clippy.match_same_arms = "allow"
clippy.missing_errors_doc = "allow" # consider enabling
clippy.missing_panics_doc = "allow" # consider enabling
clippy.module_name_repetitions = "allow" # would use except for <https://github.com/rust-lang/rust-clippy/issues/8524>
clippy.must_use_candidate = "allow" # consider enabling
clippy.no_effect_underscore_binding = "allow"
clippy.range_plus_one = "allow" # https://github.com/rust-lang/rust-clippy/issues/3307
clippy.redundant_closure_for_method_calls = "allow" # consider enabling
clippy.redundant_else = "allow"
clippy.semicolon_if_nothing_returned = "allow"
clippy.similar_names = "allow"
clippy.single_match_else = "allow"
clippy.struct_excessive_bools = "allow"
clippy.too_many_lines = "allow"
clippy.unreadable_literal = "allow"
clippy.wildcard_imports = "allow" # we use this sparingly

# clippy::restriction lints that are set to allow (to note why we aren't using them)
clippy.shadow_unrelated = "allow" # would use except for <https://github.com/rust-lang/rust-clippy/issues/10780>

# clippy lints that are set to deny
clippy.should_panic_without_expect = "deny"

# clippy lints that are set to warn
clippy.pedantic = { level = "warn", priority = -1 }
clippy.assigning_clones = "warn"
clippy.cast_lossless = "warn"
clippy.cast_possible_wrap = "warn"
clippy.doc_markdown = "warn"
clippy.exhaustive_enums = "warn"
clippy.exhaustive_structs = "warn"
clippy.into_iter_without_iter = "warn"
clippy.inconsistent_struct_constructor = "warn"
clippy.infinite_loop = "warn"
clippy.iter_without_into_iter = "warn"
clippy.large_futures = "warn"
clippy.large_stack_frames = "warn"
clippy.manual_let_else = "warn"
clippy.map_unwrap_or = "warn"
clippy.missing_fields_in_debug = "warn"
clippy.modulo_arithmetic = "warn"
clippy.needless_pass_by_value = "warn"
clippy.option_as_ref_cloned = "warn"
clippy.pub_without_shorthand = "warn"
clippy.return_self_not_must_use = "warn"
clippy.suboptimal_flops = "warn"
clippy.trivially_copy_pass_by_ref = "warn"
clippy.undocumented_unsafe_blocks = "warn"
clippy.uninlined_format_args = "warn"
clippy.unnecessary_self_imports = "warn"
clippy.unnecessary_wraps = "warn"
clippy.unused_async = "warn"
clippy.wrong_self_convention = "warn"
