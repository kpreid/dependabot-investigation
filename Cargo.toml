[workspace]
members = [
  "all-is-cubes",
  #"all-is-cubes-base",
  #"all-is-cubes-content",
  #"all-is-cubes-desktop",
  #"all-is-cubes-gpu",
  #"all-is-cubes-mesh",
  #"all-is-cubes-port",
  #"all-is-cubes-render",
  #"all-is-cubes-server",
  #"all-is-cubes-ui",
  #"test-renderers",
  #"tools/xtask",

  # Workspaces generally expect to be able to compile everything for the same target,
  # but all-is-cubes-wasm only compiles on wasm and all-is-cubes-desktop doesn't.
  # Specific advantages:
  # * The wasm workspace has Cargo config telling it to be built for wasm32-unknown-unknown,
  #   which rust-analyzer picks up, so all IDE assistance works.
  # 
  # Disadvantages, or advantages of the alternative of merely `cfg`-disabling all the wasm-only
  # code:
  # * `cargo fmt`, `cargo tree`, etc. don't work on this code (but `xtask` provides
  #   all-workspaces commands).
  #
  # "all-is-cubes-wasm",
  
  # Including this makes the fuzz targets automatically built so we know they aren't broken.
  # But, `cargo test` sometimes ignores `[[bin]] test = false` directives,
  #     https://github.com/rust-lang/cargo/issues/8338
  # so doing this causes test failures in thise circumstances.
  # As a substitute, I've included explicitly building the fuzz targets in the `xtask` build process.
  # 
  # "fuzz",
]

# Use feature resolver version 2 (latest). (This must be specified explicitly
# in a workspace, but would be implicit in a single package with edition="2021".)
resolver = "2"

[workspace.package]
# When changing any of these values, be sure to also update the non-workspace packages
# as listed above, if applicable.
edition = "2021"
rust-version = "1.80"
license = "MIT OR Apache-2.0"
authors = ["Kevin Reid <kpreid@switchb.org>"]
# TODO: add homepage = "..." when we have one
repository = "https://github.com/kpreid/all-is-cubes"

[workspace.dependencies]
all-is-cubes = { path = "all-is-cubes", version = "0.8.0", default-features = false }
all-is-cubes-base = { path = "all-is-cubes-base", version = "0.8.0", default-features = false }
allocation-counter = "0.8.1"
anyhow = "1.0.70"
# Each use should be { optional = true }.
arbitrary = { version = "1.3.2", features = ["derive"] }
arrayvec = { version = "0.7.4", default-features = false }
async_fn_traits = "0.1.1"
base64 = { version = "0.22.1", default-features = false }
bitflags = { version = "2.6.0", default-features = false }
bitvec = { version = "1.0.0", default-features = false, features = ["alloc"] }
# Note that this excludes the "derive" feature but some crates need it.
bytemuck = { version = "1.13.1", default-features = false }
cfg-if = { version = "1.0.0" }
# When upgrading clap, beware text output changes causing integration tests to fail.
clap = { version = "4.2.4", default-features = false, features = ["cargo", "deprecated", "derive", "help", "std", "suggestions", "usage", "wrap_help"] }
# Note: async_tokio feature is not needed globally but is enabled to avoid compiling two versions
# when benching/testing specific packages
criterion = { version = "0.5.1", features = ["async_tokio", "cargo_bench_support", "html_reports"] }
displaydoc = { version = "0.2.4", default-features = false}
downcast-rs = { version = "1.2.0", default-features = false }
either = { version = "1.10.0", default-features = false }
# embedded-graphics and embedded-graphics-core must match
embedded-graphics = "0.8.0"
embedded-graphics-core = "0.4.0"
euclid = { version = "0.22.10", default-features = false }
exhaust = { version = "0.1.0", default-features = false }
flume = { version = "0.11.0", default-features = false, features = ["async"] }
fnv = "1.0.7"
futures-channel = { version = "0.3.28", default-features = false, features = ["alloc"] }
futures-core = { version = "0.3.28", default-features = false, features = ["alloc"] }
futures-task = { version = "0.3.28", default-features = false }
futures-util = { version = "0.3.28", default-features = false, features = ["alloc"] }
gilrs = { version = "0.10.4" }
gloo-timers = { version = "0.3.0", default-features = false }
half = { version = "2.3.1", features = ["bytemuck"] }
hashbrown = { version = "0.14.0", default-features = false, features = ["ahash", "inline-more"] }
image = { version = "0.25.1", default-features = false }
imgref = "1.10.1"
indoc = "2.0.1"
itertools = { version = "0.12.0", default-features = false, features = ["use_alloc"] }
libm = { version = "0.2.8" }
log = { version = "0.4.17", default-features = false }
macro_rules_attribute = "0.2.0"
manyfmt = "0.1.0"
mutants = "0.0.3"
noise = { version = "0.9.0", default-features = false }
num-traits = { version = "0.2.19", default-features = false }
ordered-float = { version = "4.2.0", default-features = false }
paste = "1.0.12"
petgraph = { version = "0.6.2", default-features = false, features = ["graphmap"] }
png-decoder = "0.1.1" # used by all-is-cubes for no_std-compatible reading pngs
png = "0.17.6" # used by all-is-cubes-desktop for writing pngs
pollster = { version = "0.3.0", default-features = false }
polonius-the-crab = { version = "0.4.1" }
pretty_assertions = "1.2.0"
rand = { version = "0.8.3", default-features = false }
rand_xoshiro = "0.6.0"
rayon = { version = "1.8.0" }
re_log_types = { version = "0.17.0", default-features = false }
re_sdk = { version = "0.17.0", default-features = false }
re_types = { version = "0.17.0", default-features = false }
rectangle-pack = "0.4.2"
rendiff = { version = "0.2.0" }
scopeguard = { version = "1.2.0", default-features = false }
send_wrapper = { version = "0.6.0", features = ["futures"] }
serde = { version = "1.0.204", default-features = false, features = ["derive"] }
serde_json = "1.0.79"
simplelog = { version = "0.12.0", default-features = false, features = ["local-offset"] }
snapbox = "0.6.10" # keep in sync with `trycmd`
strum = { version = "0.26.1", default-features = false, features = ["derive"] }
sync_wrapper = { version = "1.0.0", default-features = false }
tempfile = "3.3.0"
thiserror = "1.0.62"
time = { version = "0.3.36", default-features = false }
# Tokio is used for async test-running and for certain binaries.
# The library crates do not require Tokio.
tokio = { version = "1.28.0", default-features = false }
trycmd = "0.15.4" # keep in sync with `snapbox`
unicode-segmentation = { version = "1.10.1", default-features = false }
unicode-width = { version = "0.1.9", default-features = false }
wasm-bindgen-futures = "0.4.42"
web-time = "1.0.0"
wgpu = { version = "22.1.0", default-features = false, features = ["wgsl"] }
yield-progress = { version = "0.1.6", default-features = false }

# Note: Lints are also necessarily redefined in the workspaces other than this one.
[workspace.lints.rust]
# rustc lints that are set to deny
rust_2018_idioms = { level = "deny", priority = -1 }
unsafe_op_in_unsafe_fn = "deny"
