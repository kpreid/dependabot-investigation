[package]
name = "all-is-cubes"
version = "0.8.0"
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
repository.workspace = true
description = "Recursive voxel game engine. Can be used for voxel raytracing."
license = "MIT OR Apache-2.0"
# TODO: revisit categories once it's more settled how useful this is as a game engine
categories = ["games", "graphics", "rendering::engine"]
keywords = ["all-is-cubes", "voxel"]

[package.metadata.docs.rs]
features = ["arbitrary", "save", "std"]

[lib]
# Disable running as benchmark so that the default doesn't interfere with Criterion usage.
bench = false

# See src/lib.rs documentation for more details on features.
[features]
default = ["std"]
# Adds std-dependent functionality such as thread safety.
std = [
    "all-is-cubes-base/std",
    "arcstr/std", # not required but nicer behavior
    "yield-progress/sync",
]
# Adds `impl arbitrary::Arbitrary for ...`
arbitrary = [
    "dep:arbitrary",
    "all-is-cubes-base/arbitrary",
    "euclid/arbitrary",
    "ordered-float/arbitrary",
]
# Adds serde implementations.
save = [
    "std", # TODO: Eliminate dependency on std (requires replacing flate2)
    "dep:base64", # encoded compressed data
    "dep:flate2", # compression
    "dep:serde",
    "all-is-cubes-base/serde",
    "bitflags/serde", # serialize for util::ShowStatus
    "bytemuck/extern_crate_std", # impl Error for CheckedCastError
    "ordered-float/serde",
]
# Adds rerun logging support
rerun = [
    "std",
    "dep:re_log_types",
    "dep:re_sdk",
    "dep:re_types",
    "all-is-cubes-base/rerun",
]
# Adds automatic parallelism to some algorithms.
# If disabled, `std::thread` is never used.
# If enabled, threads may be created and the active `rayon` thread pool may be used.
auto-threads = ["std", "dep:rayon"]

[dependencies]
all-is-cubes-base = { workspace = true }
itertools = { workspace = true }
